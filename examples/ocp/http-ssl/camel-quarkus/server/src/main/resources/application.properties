# Mount TLS configuration
quarkus.openshift.ports.http.tls=true
quarkus.openshift.ports.http.container-port=8443
quarkus.openshift.ports.http.host-port=8443
quarkus.openshift.ports.http.path=

quarkus.openshift.mounts.server.path=/certs/server/
quarkus.openshift.mounts.client.path=/certs/client/
quarkus.openshift.secret-volumes.server.secret-name=ocp-ssl-camel-server-tls
quarkus.openshift.secret-volumes.client.secret-name=ocp-ssl-client-tls
quarkus.tls.key-store.pem.0.cert=/certs/server/tls.crt
quarkus.tls.key-store.pem.0.key=/certs/server/tls.key
quarkus.tls.trust-store.pem.0.cert=/certs/client/tls.crt
quarkus.tls.trust-store.pem.0.key=/certs/client/tls.key
quarkus.http.ssl-port=8443
quarkus.http.insecure-requests=redirect
quarkus.tls.reload-period=1800h
# Enable mTLS
quarkus.http.ssl.client-auth=REQUIRED


### Route TLS configuration:
quarkus.openshift.route.expose=true
quarkus.openshift.route.target-port=http
quarkus.openshift.name=camel-http-ssl-client
quarkus.openshift.deployment-kind=deployment
quarkus.openshift.route.tls.termination=passthrough
quarkus.openshift.route.tls.insecure-edge-termination-policy=Redirect
quarkus.openshift.rbac.role-bindings."camel-http-ssl-server".role-name=secret-viewer
quarkus.openshift.service-account=secret-reader